<project name="Demo Server" default="server" basedir=".">

	<!-- PROPERTIES -->
	<!-- ********** -->

	<!-- Directory paths for the java server, javascript, and dest dir for the student copy -->
	<property name="port.arg" value="8081"/>
	<property name="web.arg" value="gameplay"/>
	<property name="requests.arg" value="ug"/>

	<property name="ppfactory.arg" value="catan.server.factory.JsonPluginFactory"/>
	<property name="checkpointfreq.arg" value="3"/>

	<!-- Base output folder -->
	<property name="dest.dir" value="docs"/>
	<!-- YUIDoc output Folder -->
	<property name="yuidoc.dir" value="${dest.dir}/javascript"/>
	<!-- Jar file path/name from here -->
	<property name="jar.file" value="server.jar"/>

	<!-- Our server's base folder -->
	<property name="our-server.dir" value="server"/>
	<!-- Our server's source folder -->
	<property name="our-server-src.dir" value="${our-server.dir}/src"/>
	<!-- Our server's test folder -->
	<property name="our-server-test.dir" value="${our-server.dir}/test"/>
	<!-- Our server's binary folder -->
	<property name="our-server-bin.dir" value="${our-server.dir}/bin"/>
	<!-- Our server's library folder -->
	<property name="our-server-lib.dir" value="${our-server.dir}/lib"/>
	<!-- Our server's persistence folder -->
	<property name="our-server-persistence.dir" value="${our-server.dir}/persistence"/>

	<!-- Cobertura folder and classpath -->
	<property name="cobertura.dir" value="${our-server-lib.dir}/cobertura"/>
	<path id="cobertura-classpath">
		<fileset dir="${cobertura.dir}">
			<include name="cobertura.jar"/>
			<include name="lib/**/*.jar"/>
		</fileset>
	</path>
	<taskdef classpathref="cobertura-classpath" resource="tasks.properties"/>

	<!-- Our server's classpath -->
	<path id="our-server-classpath">
		<pathelement location="${our-server-bin.dir}"/>
		<pathelement location="${our-server-lib.dir}/aopalliance.jar"/>
		<pathelement location="${our-server-lib.dir}/gson-2.2.4.jar"/>
		<pathelement location="${our-server-lib.dir}/gson-2.2.4-javadoc.jar"/>
		<pathelement location="${our-server-lib.dir}/gson-2.2.4-sources.jar"/>
		<pathelement location="${our-server-lib.dir}/guice-3.0.jar"/>
		<pathelement location="${our-server-lib.dir}/guice-assistedinject-3.0.jar"/>
		<pathelement location="${our-server-lib.dir}/guice-grapher-3.0.jar"/>
		<pathelement location="${our-server-lib.dir}/guice-jmx-3.0.jar"/>
		<pathelement location="${our-server-lib.dir}/guice-jndi-3.0.jar"/>
		<pathelement location="${our-server-lib.dir}/guice-multibindings-3.0.jar"/>
		<pathelement location="${our-server-lib.dir}/guice-persist-3.0.jar"/>
		<pathelement location="${our-server-lib.dir}/guice-servlet-3.0.jar"/>
		<pathelement location="${our-server-lib.dir}/guice-spring-3.0.jar"/>
		<pathelement location="${our-server-lib.dir}/guice-struts2-plugin-3.0.jar"/>
		<pathelement location="${our-server-lib.dir}/guice-throwingproviders-3.0.jar"/>
		<pathelement location="${our-server-lib.dir}/hamcrest-core-1.3.jar"/>
		<pathelement location="${our-server-lib.dir}/javax.inject.jar"/>
		<pathelement location="${our-server-lib.dir}/junit-4.11.jar"/>
        <pathelement location="${our-server-lib.dir}/sqlite-jdbc-3.7.2.jar"/>

	</path>

	<!-- TARGETS -->
	<!-- ******* -->

	<target name="server" description="Runs the demo server">
		<java jar="${jar.file}" fork="true">
			<arg value="${port.arg}"/>
			<arg value="${web.arg}"/>
			<arg value="${requests.arg}"/>
			<assertions>
				<enable/>
			</assertions>
		</java>
	</target>

	<target name="clear" description="Clears the data persisted by our team's server">
		<delete dir="${our-server-persistence.dir}"/>
		<mkdir dir="${our-server-persistence.dir}"/>
	</target>

	<target name="our-server" description="Compiles and runs our team's server">
		<delete dir="${our-server-bin.dir}"/>
		<mkdir dir="${our-server-bin.dir}"/>
		<javac srcdir="${our-server-src.dir}" destdir="${our-server-bin.dir}" classpathref="our-server-classpath" debug="true" includeantruntime="true"/>
		<java classname="catan.server.Server" fork="true">
			<classpath>
				<path refid="our-server-classpath"/>
			</classpath>
			<arg value="${ppfactory.arg}"/>
			<arg value="${checkpointfreq.arg}"/>
		</java>
	</target>

	<target name="test" description="Compiles and runs our team's tests">
		<delete dir="${our-server-bin.dir}"/>
		<mkdir dir="${our-server-bin.dir}"/>
		<javac srcdir="${our-server-src.dir}" destdir="${our-server-bin.dir}" classpathref="our-server-classpath" debug="true" includeantruntime="true"/>
		<javac srcdir="${our-server-test.dir}" destdir="${our-server-bin.dir}" classpathref="our-server-classpath" debug="true" includeantruntime="true"/>
		<java classname="org.junit.runner.JUnitCore" fork="true">
			<classpath>
				<path refid="our-server-classpath"/>
			</classpath>
			<arg value="catan.test.MovesHandlerTests"/>
		</java>
	</target>

	<target name="make-js-doc" description="Parse and produce the javascript docs">
		<echo> Making javascript documentation</echo>
		<exec executable="yuidoc">
			<arg value="-o"/>
			<arg value="${yuidoc.dir}"/>
			<arg value="${javascript.dir}"/>
		</exec>
	</target>
</project>
